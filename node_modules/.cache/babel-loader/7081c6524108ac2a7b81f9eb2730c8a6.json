{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/TechProducts.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div``;\n_c = Wrapper;\nexport class TechProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const {\n        client\n      } = this.props;\n      client.query({\n        query: gql`\n          {\n            category(input: { title: \"tech\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n\n                brand\n              }\n            }\n          }\n        `\n      }).then(response => {\n        this.setState({\n          techProducts: response,\n          isFetching: false\n        });\n      });\n    };\n\n    this.state = {\n      techProducts: [],\n      isFetching: true\n    };\n  }\n\n  render() {\n    const {\n      state: {\n        isFetching,\n        techProducts\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: isFetching ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(techProducts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default TechProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["React","Component","styled","gql","Wrapper","div","TechProducts","constructor","props","componentDidMount","client","query","then","response","setState","techProducts","isFetching","state","render","JSON","stringify"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/TechProducts.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { gql } from '@apollo/client'\n\nconst Wrapper = styled.div``\n\nexport class TechProducts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      techProducts: [],\n      isFetching: true,\n    }\n  }\n  componentDidMount = () => {\n    const { client } = this.props\n\n    client\n      .query({\n        query: gql`\n          {\n            category(input: { title: \"tech\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n\n                brand\n              }\n            }\n          }\n        `,\n      })\n      .then((response) => {\n        this.setState({ techProducts: response, isFetching: false })\n      })\n  }\n\n  render() {\n    const {\n      state: { isFetching, techProducts },\n    } = this\n\n    return (\n      <Wrapper>\n        {isFetching ? <p>Loading...</p> : <div>{JSON.stringify(techProducts)}</div>}\n      </Wrapper>\n    )\n  }\n}\n\nexport default TechProducts\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI,EAA3B;KAAMD,O;AAEN,OAAO,MAAME,YAAN,SAA2BL,SAA3B,CAAqC;EAC1CM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,iBAPmB,GAOC,MAAM;MACxB,MAAM;QAAEC;MAAF,IAAa,KAAKF,KAAxB;MAEAE,MAAM,CACHC,KADH,CACS;QACLA,KAAK,EAAER,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAlCa,CADT,EAqCGS,IArCH,CAqCSC,QAAD,IAAc;QAClB,KAAKC,QAAL,CAAc;UAAEC,YAAY,EAAEF,QAAhB;UAA0BG,UAAU,EAAE;QAAtC,CAAd;MACD,CAvCH;IAwCD,CAlDkB;;IAEjB,KAAKC,KAAL,GAAa;MACXF,YAAY,EAAE,EADH;MAEXC,UAAU,EAAE;IAFD,CAAb;EAID;;EA8CDE,MAAM,GAAG;IACP,MAAM;MACJD,KAAK,EAAE;QAAED,UAAF;QAAcD;MAAd;IADH,IAEF,IAFJ;IAIA,oBACE,QAAC,OAAD;MAAA,UACGC,UAAU,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAH,gBAAuB;QAAA,UAAMG,IAAI,CAACC,SAAL,CAAeL,YAAf;MAAN;QAAA;QAAA;QAAA;MAAA;IADpC;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AA/DyC;AAkE5C,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}