{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/CartedProduct.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  margin-bottom: 40px;\n\n  .carted-product__content {\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 8px;\n  }\n  .carted-product__content-image {\n    height: 190px;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    max-width: 100%;\n    position: relative;\n  }\n  .details {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: space-between;\n\n    .text {\n      color: ${props => props.theme.colors.text_01};\n      font-size: 16px;\n      line-height: 160%;\n    }\n    .price {\n      span {\n        font-weight: 500;\n      }\n    }\n  }\n  .boxes {\n    display: flex;\n    gap: 6px;\n    .box {\n      border: 1px solid ${props => props.theme.colors.text_01};\n      min-width: 35px;\n      text-align: center;\n      font-size: 14px;\n      padding: 7px;\n      &.active {\n        background-color: ${props => props.theme.colors.dark};\n        transition: 0.3s;\n        color: ${props => props.theme.colors.white};\n      }\n    }\n    .color {\n      width: 23px;\n      height: 23px;\n      min-width: auto;\n    }\n  }\n  .rhs {\n    display: flex;\n  }\n  .quantity {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      border: 1px solid ${props => props.theme.colors.text_01};\n      background-color: ${props => props.theme.colors.white};\n      width: 23px;\n      font-size: 31px;\n      line-height: 11px;\n      height: 23px;\n      line-height: 11px;\n      &:hover {\n        cursor: pointer;\n        background-color: ${props => props.theme.colors.dark};\n        transition: 0.3s;\n        color: ${props => props.theme.colors.white};\n      }\n    }\n  }\n`;\n_c = Wrapper;\nexport class CartedProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increaseProductCount = () => {\n      this.setState({\n        productCount: this.state.productCount + 1\n      });\n    };\n\n    this.decreaseProductCount = () => {\n      if (this.state.productCount > 1) {\n        this.setState({\n          productCount: this.state.productCount - 1\n        });\n      } else {\n        this.setState({\n          productCount: this.state.productCount\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.props.client.query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `\n      }).then(response => {\n        this.setState({\n          techProducts: response.data.category.products,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      productCount: 1,\n      techProducts: [],\n      isLoading: true,\n      category: 'tech'\n    };\n  }\n\n  render() {\n    const {\n      increaseProductCount,\n      decreaseProductCount,\n      props: {\n        client,\n        activeCurrencyLabel,\n        fullCartPageStyle = false\n      },\n      state: {\n        isLoading,\n        productCount,\n        techProducts\n      }\n    } = this;\n    const cartedProducts = techProducts.slice(0, 3);\n    const mappedProduct = cartedProducts.map(product => {\n      return product;\n    });\n    const filterCurrentAmount = cartedProducts === null || cartedProducts === void 0 ? void 0 : cartedProducts.prices.find(obj => {\n      return obj.currency.label === activeCurrencyLabel;\n    });\n    console.log(filterCurrentAmount); // var allAttributes =  cartedProducts.attributes.map((attribute) =>\n    //   attribute.items.map((color) => color.value)\n    // )\n    // const allColors = cartedProducts.attributes.find((attribute) => attribute.name === 'Color')\n    // const allCapacities = cartedProducts.attributes.find((attribute) => attribute.id === 'Capacity')\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : cartedProducts.map(cartedProduct => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carted-product__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: cartedProduct.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rhs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: increaseProductCount,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"count\",\n                children: productCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: decreaseProductCount,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carted-product__content-image\",\n              style: {\n                backgroundImage: `url(${cartedProduct && cartedProduct.gallery[0]})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCartedProduct.propTypes = {\n  activeCurrencyLabel: PropTypes.string,\n  fullCartPageStyle: PropTypes.bool\n};\nexport default CartedProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["React","Component","PropTypes","styled","gql","Wrapper","div","props","theme","colors","text_01","dark","white","CartedProduct","constructor","increaseProductCount","setState","productCount","state","decreaseProductCount","componentDidMount","client","query","category","then","response","techProducts","data","products","isLoading","render","activeCurrencyLabel","fullCartPageStyle","cartedProducts","slice","mappedProduct","map","product","filterCurrentAmount","prices","find","obj","currency","label","console","log","cartedProduct","name","backgroundImage","gallery","propTypes","string","bool"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/CartedProduct.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { gql } from '@apollo/client'\n\nconst Wrapper = styled.div`\n  margin-bottom: 40px;\n\n  .carted-product__content {\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 8px;\n  }\n  .carted-product__content-image {\n    height: 190px;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    max-width: 100%;\n    position: relative;\n  }\n  .details {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: space-between;\n\n    .text {\n      color: ${(props) => props.theme.colors.text_01};\n      font-size: 16px;\n      line-height: 160%;\n    }\n    .price {\n      span {\n        font-weight: 500;\n      }\n    }\n  }\n  .boxes {\n    display: flex;\n    gap: 6px;\n    .box {\n      border: 1px solid ${(props) => props.theme.colors.text_01};\n      min-width: 35px;\n      text-align: center;\n      font-size: 14px;\n      padding: 7px;\n      &.active {\n        background-color: ${(props) => props.theme.colors.dark};\n        transition: 0.3s;\n        color: ${(props) => props.theme.colors.white};\n      }\n    }\n    .color {\n      width: 23px;\n      height: 23px;\n      min-width: auto;\n    }\n  }\n  .rhs {\n    display: flex;\n  }\n  .quantity {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      border: 1px solid ${(props) => props.theme.colors.text_01};\n      background-color: ${(props) => props.theme.colors.white};\n      width: 23px;\n      font-size: 31px;\n      line-height: 11px;\n      height: 23px;\n      line-height: 11px;\n      &:hover {\n        cursor: pointer;\n        background-color: ${(props) => props.theme.colors.dark};\n        transition: 0.3s;\n        color: ${(props) => props.theme.colors.white};\n      }\n    }\n  }\n`\n\nexport class CartedProduct extends Component {\n  static propTypes = {\n    activeCurrencyLabel: PropTypes.string,\n    fullCartPageStyle: PropTypes.bool,\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      productCount: 1,\n      techProducts: [],\n      isLoading: true,\n      category: 'tech',\n    }\n  }\n\n  increaseProductCount = () => {\n    this.setState({ productCount: this.state.productCount + 1 })\n  }\n  decreaseProductCount = () => {\n    if (this.state.productCount > 1) {\n      this.setState({ productCount: this.state.productCount - 1 })\n    } else {\n      this.setState({ productCount: this.state.productCount })\n    }\n  }\n  componentDidMount = () => {\n    this.props.client\n      .query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `,\n      })\n      .then((response) => {\n        this.setState({ techProducts: response.data.category.products, isLoading: false })\n      })\n  }\n\n  render() {\n    const {\n      increaseProductCount,\n      decreaseProductCount,\n      props: { client, activeCurrencyLabel, fullCartPageStyle = false },\n      state: { isLoading, productCount, techProducts },\n    } = this\n    const cartedProducts = techProducts.slice(0, 3)\n    const mappedProduct = cartedProducts.map((product)=>{return (product)})\n    const filterCurrentAmount = cartedProducts?.prices.find((obj) => {\n      return obj.currency.label === activeCurrencyLabel\n    })\n    console.log(filterCurrentAmount)\n\n    // var allAttributes =  cartedProducts.attributes.map((attribute) =>\n    //   attribute.items.map((color) => color.value)\n    // )\n    // const allColors = cartedProducts.attributes.find((attribute) => attribute.name === 'Color')\n\n    // const allCapacities = cartedProducts.attributes.find((attribute) => attribute.id === 'Capacity')\n\n    return (\n      <Wrapper>\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          cartedProducts.map((cartedProduct) => {\n            return (\n              <div className=\"carted-product__content\">\n                <div className=\"details\">\n                  <p className=\"text\">{cartedProduct.name}</p>\n                  {/* <div className=\"price\">\n                    {' '}\n                    <span className=\"text\">{filterCurrentAmount.currency.symbol}</span>\n                    {cartedProduct.prices.some(\n                      (currentLabel) => currentLabel.currency.label === activeCurrencyLabel\n                    ) && <span className=\"text\">{filterCurrentAmount.amount}</span>}\n                  </div> */}\n                  {/* <div className=\"capacities\">\n                    <p className=\"text\">{allCapacities.id}:</p>\n                    <div className=\"boxes\">\n                      {allCapacities?.items.map((capacity) => {\n                        return (\n                          <p\n                            key={capacity.value}\n                            className={` text box ${capacity.value === '1T' ? 'active' : ''}`}\n                          >\n                            {capacity.value}\n                          </p>\n                        )\n                      })}\n                    </div>\n                  </div>\n                  <div className=\"colors\">\n                    <p className=\"text\">{allColors?.id}:</p>\n                    <div className=\"boxes\">\n                      {allColors?.items.map((color) => {\n                        return (\n                          <p\n                            key={color.value}\n                            style={{ backgroundColor: color.value }}\n                            className=\"box color\"\n                          ></p>\n                        )\n                      })}\n                    </div>\n                  </div> */}\n                </div>\n                <div className=\"rhs\">\n                  <div className=\"quantity\">\n                    <button onClick={increaseProductCount}>+</button>\n                    <p className=\"count\">{productCount}</p>\n                    <button onClick={decreaseProductCount}>-</button>\n                  </div>\n                  {/* <img src={product && product.gallery[0]} alt=\"\" /> */}\n                  <div\n                    className=\"carted-product__content-image\"\n                    style={{ backgroundImage: `url(${cartedProduct && cartedProduct.gallery[0]})` }}\n                  ></div>\n                </div>\n              </div>\n            )\n          })\n        )}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CartedProduct\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}