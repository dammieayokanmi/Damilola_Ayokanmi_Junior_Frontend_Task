{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/pages/CartPage.js\";\nimport { PureComponent } from 'react';\nimport { NavBar } from 'src/components/NavBar';\nimport { gql } from '@apollo/client';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  .content {\n    padding: 5px 50px;\n    margin: 125px 0 50px 0;\n    @media (max-width: ${props => props.theme.breakpoint.sm}) {\n      padding: 5px 25px\n    }\n  }\n  .products--grid {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: calc(100vh - 130px);\n    img {\n      width: 100px;\n    }\n  }\n`;\n_c = Wrapper;\nexport class CartPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onCurrencyMenuClick = e => {\n      this.setState({\n        activeCurrencyLabel: e.currentTarget.textContent.split(' ')[1]\n      });\n    };\n\n    this.increaseProductCount = () => {\n      this.setState({\n        productCount: this.state.productCount + 1\n      });\n    };\n\n    this.decreaseProductCount = () => {\n      if (this.state.productCount > 1) {\n        this.setState({\n          productCount: this.state.productCount - 1\n        });\n      } else {\n        this.setState({\n          productCount: this.state.productCount\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.props.client.query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `\n      }).then(response => {\n        this.setState({\n          techProducts: response.data.category.products,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      activeCurrencyLabel: 'AUD',\n      productCount: 1\n    };\n  }\n\n  render() {\n    var _product;\n\n    const {\n      increaseProductCount,\n      decreaseProductCount,\n      onCurrencyMenuClick,\n      props: {\n        client\n      },\n      state: {\n        activeCurrencyLabel,\n        productCount,\n        techProducts,\n        isLoading\n      }\n    } = this;\n    console.log(techProducts); // const product = techProducts.slice(0, 3)\n\n    const filterCurrentAmount = (_product = product) === null || _product === void 0 ? void 0 : _product.prices.find(obj => {\n      return obj.currency.label === activeCurrencyLabel;\n    }); // var allAttributes =  product.attributes.map((attribute) =>\n    //   attribute.items.map((color) => color.value)\n    // )\n\n    const allColors = product.attributes.find(attribute => attribute.name === 'Color');\n    const allCapacities = product.attributes.find(attribute => attribute.id === 'Capacity');\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        showCategoryTab: false,\n        client: client,\n        activeCurrencyLabel: activeCurrencyLabel,\n        onCurrencyMenuClick: onCurrencyMenuClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["PureComponent","NavBar","gql","styled","Wrapper","div","props","theme","breakpoint","sm","CartPage","constructor","onCurrencyMenuClick","e","setState","activeCurrencyLabel","currentTarget","textContent","split","increaseProductCount","productCount","state","decreaseProductCount","componentDidMount","client","query","category","then","response","techProducts","data","products","isLoading","render","console","log","filterCurrentAmount","product","prices","find","obj","currency","label","allColors","attributes","attribute","name","allCapacities","id"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/pages/CartPage.js"],"sourcesContent":["import { PureComponent } from 'react'\nimport { NavBar } from 'src/components/NavBar'\nimport { gql } from '@apollo/client'\n\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  .content {\n    padding: 5px 50px;\n    margin: 125px 0 50px 0;\n    @media (max-width: ${(props) => props.theme.breakpoint.sm}) {\n      padding: 5px 25px\n    }\n  }\n  .products--grid {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: calc(100vh - 130px);\n    img {\n      width: 100px;\n    }\n  }\n`\n\nexport class CartPage extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeCurrencyLabel: 'AUD',\n      productCount: 1,\n    }\n  }\n  onCurrencyMenuClick = (e) => {\n    this.setState({ activeCurrencyLabel: e.currentTarget.textContent.split(' ')[1] })\n    \n  }\n  increaseProductCount = () => {\n    this.setState({ productCount: this.state.productCount + 1 })\n  }\n  decreaseProductCount = () => {\n    if (this.state.productCount > 1) {\n      this.setState({ productCount: this.state.productCount - 1 })\n    } else {\n      this.setState({ productCount: this.state.productCount })\n    }\n  }\n  componentDidMount = () => {\n    this.props.client\n      .query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `,\n      })\n      .then((response) => {\n        this.setState({ techProducts: response.data.category.products, isLoading: false })\n      })\n  }\n\n\n  render() {\n    const {\n      increaseProductCount,\n      decreaseProductCount,\n      onCurrencyMenuClick,\n      props: { client },\n      state: { activeCurrencyLabel,productCount,techProducts,isLoading },\n    } = this\n    console.log(techProducts)\n    // const product = techProducts.slice(0, 3)\n    const filterCurrentAmount = product?.prices.find((obj) => {\n      return obj.currency.label === activeCurrencyLabel\n    })\n\n    // var allAttributes =  product.attributes.map((attribute) =>\n    //   attribute.items.map((color) => color.value)\n    // )\n    const allColors = product.attributes.find((attribute) => attribute.name === 'Color')\n\n    const allCapacities = product.attributes.find((attribute) => attribute.id === 'Capacity')\n\n    \n    return (\n      <Wrapper>\n        <NavBar\n        showCategoryTab={false}\n          client={client}\n          activeCurrencyLabel={activeCurrencyLabel}\n          onCurrencyMenuClick={onCurrencyMenuClick}\n        />\n        {/* <div className=\"carted-product__content\">\n          <div className=\"details\">\n            <p className=\"text\">{product.name}</p>\n            <div className=\"price\">\n              {' '}\n              <span className=\"text\">{filterCurrentAmount.currency.symbol}</span>\n              {product.prices.some(\n                (currentLabel) => currentLabel.currency.label === activeCurrencyLabel\n              ) && <span className=\"text\">{filterCurrentAmount.amount}</span>}\n            </div>\n            <div className=\"capacities\">\n              <p className=\"text\">{allCapacities.id}:</p>\n              <div className=\"boxes\">\n                {allCapacities?.items.map((capacity) => {\n                  return (\n                    <p className={` text box ${capacity.value === '1T' ? 'active' : ''}`}>\n                      {capacity.value}\n                    </p>\n                  )\n                })}\n              </div>\n            </div>\n            <div className=\"colors\">\n              <p className=\"text\">{allColors?.id}:</p>\n              <div className=\"boxes\">\n                {allColors?.items.map((color) => {\n                  return <p style={{ backgroundColor: color.value }} className=\"box color\"></p>\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"quantity\">\n            <button onClick={increaseProductCount}>+</button>\n            <p className=\"count\">{productCount}</p>\n            <button onClick={decreaseProductCount}>-</button>\n          </div>\n          <div\n            className=\"carted-product__content-image\"\n            style={{ backgroundImage: `url(${product && product.gallery[0]})` }}\n          ></div>\n        </div> */}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CartPage\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA,yBAA0BC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAZ,CAAuBC,EAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;KAAML,O;AAyBN,OAAO,MAAMM,QAAN,SAAuBV,aAAvB,CAAqC;EAC1CW,WAAW,CAACL,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBM,mBAPmB,GAOIC,CAAD,IAAO;MAC3B,KAAKC,QAAL,CAAc;QAAEC,mBAAmB,EAAEF,CAAC,CAACG,aAAF,CAAgBC,WAAhB,CAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC;MAAvB,CAAd;IAED,CAVkB;;IAAA,KAWnBC,oBAXmB,GAWI,MAAM;MAC3B,KAAKL,QAAL,CAAc;QAAEM,YAAY,EAAE,KAAKC,KAAL,CAAWD,YAAX,GAA0B;MAA1C,CAAd;IACD,CAbkB;;IAAA,KAcnBE,oBAdmB,GAcI,MAAM;MAC3B,IAAI,KAAKD,KAAL,CAAWD,YAAX,GAA0B,CAA9B,EAAiC;QAC/B,KAAKN,QAAL,CAAc;UAAEM,YAAY,EAAE,KAAKC,KAAL,CAAWD,YAAX,GAA0B;QAA1C,CAAd;MACD,CAFD,MAEO;QACL,KAAKN,QAAL,CAAc;UAAEM,YAAY,EAAE,KAAKC,KAAL,CAAWD;QAA3B,CAAd;MACD;IACF,CApBkB;;IAAA,KAqBnBG,iBArBmB,GAqBC,MAAM;MACxB,KAAKjB,KAAL,CAAWkB,MAAX,CACGC,KADH,CACS;QACLA,KAAK,EAAEvB,GAAI;AACnB;AACA,wCAAwC,KAAKmB,KAAL,CAAWK,QAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAjCa,CADT,EAoCGC,IApCH,CAoCSC,QAAD,IAAc;QAClB,KAAKd,QAAL,CAAc;UAAEe,YAAY,EAAED,QAAQ,CAACE,IAAT,CAAcJ,QAAd,CAAuBK,QAAvC;UAAiDC,SAAS,EAAE;QAA5D,CAAd;MACD,CAtCH;IAuCD,CA7DkB;;IAEjB,KAAKX,KAAL,GAAa;MACXN,mBAAmB,EAAE,KADV;MAEXK,YAAY,EAAE;IAFH,CAAb;EAID;;EA0DDa,MAAM,GAAG;IAAA;;IACP,MAAM;MACJd,oBADI;MAEJG,oBAFI;MAGJV,mBAHI;MAIJN,KAAK,EAAE;QAAEkB;MAAF,CAJH;MAKJH,KAAK,EAAE;QAAEN,mBAAF;QAAsBK,YAAtB;QAAmCS,YAAnC;QAAgDG;MAAhD;IALH,IAMF,IANJ;IAOAE,OAAO,CAACC,GAAR,CAAYN,YAAZ,EARO,CASP;;IACA,MAAMO,mBAAmB,eAAGC,OAAH,6CAAG,SAASC,MAAT,CAAgBC,IAAhB,CAAsBC,GAAD,IAAS;MACxD,OAAOA,GAAG,CAACC,QAAJ,CAAaC,KAAb,KAAuB3B,mBAA9B;IACD,CAF2B,CAA5B,CAVO,CAcP;IACA;IACA;;IACA,MAAM4B,SAAS,GAAGN,OAAO,CAACO,UAAR,CAAmBL,IAAnB,CAAyBM,SAAD,IAAeA,SAAS,CAACC,IAAV,KAAmB,OAA1D,CAAlB;IAEA,MAAMC,aAAa,GAAGV,OAAO,CAACO,UAAR,CAAmBL,IAAnB,CAAyBM,SAAD,IAAeA,SAAS,CAACG,EAAV,KAAiB,UAAxD,CAAtB;IAGA,oBACE,QAAC,OAAD;MAAA,uBACE,QAAC,MAAD;QACA,eAAe,EAAE,KADjB;QAEE,MAAM,EAAExB,MAFV;QAGE,mBAAmB,EAAET,mBAHvB;QAIE,mBAAmB,EAAEH;MAJvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAmDD;;AA1IyC;AA6I5C,eAAeF,QAAf"},"metadata":{},"sourceType":"module"}