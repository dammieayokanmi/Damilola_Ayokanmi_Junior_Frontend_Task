{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/TechProducts.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div``;\n_c = Wrapper;\nconst TECH_PRODUCTS_QUERY = `\n{\n    category(input: { title: String! }) {\n      name\n      products{\n        id\n      }\n    \n    }\n  }\n`;\nexport class TechProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = cat => {\n      this.setState({ ...this.state,\n        isFetching: true\n      });\n      fetch('http://localhost:4000/graphql', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: TECH_PRODUCTS_QUERY,\n          variables: {\n            cat\n          }\n        })\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          techProducts: data,\n          isFetching: false\n        });\n      }).catch(e => {\n        console.log(e);\n        this.setState({ ...this.state,\n          isFetching: false\n        });\n      });\n    };\n\n    this.state = {\n      techProducts: [],\n      isFetching: false,\n      cat: 'tech'\n    };\n  }\n\n  render() {\n    const {\n      state: {\n        isFetching,\n        techProducts\n      }\n    } = this;\n    console.log(techProducts);\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: isFetching ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"ALL_PRODUCTS_QUERY\", JSON.stringify(techProducts)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default TechProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["React","Component","styled","Wrapper","div","TECH_PRODUCTS_QUERY","TechProducts","constructor","props","componentDidMount","cat","setState","state","isFetching","fetch","method","headers","body","JSON","stringify","query","variables","then","response","json","data","techProducts","catch","e","console","log","render"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/TechProducts.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div``\n\nconst TECH_PRODUCTS_QUERY = `\n{\n    category(input: { title: String! }) {\n      name\n      products{\n        id\n      }\n    \n    }\n  }\n`\n\nexport class TechProducts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      techProducts: [],\n      isFetching: false,\n      cat: 'tech',\n    }\n  }\n  componentDidMount = (cat) => {\n    this.setState({ ...this.state, isFetching: true })\n    fetch('http://localhost:4000/graphql', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({ query: TECH_PRODUCTS_QUERY,\n        variables: { cat } }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ techProducts: data, isFetching: false })\n      })\n      .catch((e) => {\n        console.log(e)\n        this.setState({ ...this.state, isFetching: false })\n      })\n  }\n\n  render() {\n    const {\n      state: { isFetching, techProducts },\n    } = this\n    console.log(techProducts)\n\n    return (\n      <Wrapper>\n        {isFetching ? (\n          <p>Loading...</p>\n        ) : (\n          <div>\n            ALL_PRODUCTS_QUERY\n            {JSON.stringify(techProducts)}\n          </div>\n        )}\n      </Wrapper>\n    )\n  }\n}\n\nexport default TechProducts\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI,EAA3B;KAAMD,O;AAEN,MAAME,mBAAmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,OAAO,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;EAC1CM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAQnBC,iBARmB,GAQEC,GAAD,IAAS;MAC3B,KAAKC,QAAL,CAAc,EAAE,GAAG,KAAKC,KAAV;QAAiBC,UAAU,EAAE;MAA7B,CAAd;MACAC,KAAK,CAAC,+BAAD,EAAkC;QACrCC,MAAM,EAAE,MAD6B;QAErCC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAF4B;QAGrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEC,KAAK,EAAEf,mBAAT;UACnBgB,SAAS,EAAE;YAAEX;UAAF;QADQ,CAAf;MAH+B,CAAlC,CAAL,CAMGY,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSG,IAAD,IAAU;QACd,KAAKd,QAAL,CAAc;UAAEe,YAAY,EAAED,IAAhB;UAAsBZ,UAAU,EAAE;QAAlC,CAAd;MACD,CATH,EAUGc,KAVH,CAUUC,CAAD,IAAO;QACZC,OAAO,CAACC,GAAR,CAAYF,CAAZ;QACA,KAAKjB,QAAL,CAAc,EAAE,GAAG,KAAKC,KAAV;UAAiBC,UAAU,EAAE;QAA7B,CAAd;MACD,CAbH;IAcD,CAxBkB;;IAEjB,KAAKD,KAAL,GAAa;MACXc,YAAY,EAAE,EADH;MAEXb,UAAU,EAAE,KAFD;MAGXH,GAAG,EAAE;IAHM,CAAb;EAKD;;EAmBDqB,MAAM,GAAG;IACP,MAAM;MACJnB,KAAK,EAAE;QAAEC,UAAF;QAAca;MAAd;IADH,IAEF,IAFJ;IAGAG,OAAO,CAACC,GAAR,CAAYJ,YAAZ;IAEA,oBACE,QAAC,OAAD;MAAA,UACGb,UAAU,gBACT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADS,gBAGT;QAAA,iCAEGK,IAAI,CAACC,SAAL,CAAeO,YAAf,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AA7CyC;AAgD5C,eAAepB,YAAf"},"metadata":{},"sourceType":"module"}