{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/pages/CartPage.js\";\nimport { PureComponent } from 'react';\nimport { NavBar } from 'src/components/NavBar';\nimport { CartedProduct } from 'src/components/CartedProduct';\nimport { gql } from '@apollo/client';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  .content {\n    padding: 5px 50px;\n    margin: 125px 0 50px 0;\n    @media (max-width: ${props => props.theme.breakpoint.sm}) {\n      padding: 5px 25px;\n    }\n  }\n  .products--grid {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: calc(100vh - 130px);\n    img {\n      width: 100px;\n    }\n  }\n`;\n_c = Wrapper;\nexport class CartPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onCurrencyMenuClick = e => {\n      this.setState({\n        activeCurrencyLabel: e.currentTarget.textContent.split(' ')[1]\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.props.client.query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `\n      }).then(response => {\n        this.setState({\n          techProducts: response.data.category.products,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      activeCurrencyLabel: 'AUD',\n      techProducts: [],\n      isLoading: true,\n      isMenuOpen: false,\n      category: 'tech'\n    };\n  }\n\n  render() {\n    const {\n      onCurrencyMenuClick,\n      props: {\n        client\n      },\n      state: {\n        activeCurrencyLabel,\n        isLoading,\n        techProducts\n      }\n    } = this;\n    const cartedProducts = techProducts.slice(0, 3);\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        client: client,\n        activeCurrencyLabel: activeCurrencyLabel,\n        onCurrencyMenuClick: onCurrencyMenuClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cartedProducts.map(product => {\n          return /*#__PURE__*/_jsxDEV(CartedProduct, {\n            product: product,\n            activeCurrencyLabel: activeCurrencyLabel\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"names":["PureComponent","NavBar","CartedProduct","gql","styled","Wrapper","div","props","theme","breakpoint","sm","CartPage","constructor","onCurrencyMenuClick","e","setState","activeCurrencyLabel","currentTarget","textContent","split","componentDidMount","client","query","state","category","then","response","techProducts","data","products","isLoading","isMenuOpen","render","cartedProducts","slice","map","product","id"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/pages/CartPage.js"],"sourcesContent":["import { PureComponent } from 'react'\nimport { NavBar } from 'src/components/NavBar'\nimport { CartedProduct } from 'src/components/CartedProduct'\nimport { gql } from '@apollo/client'\n\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  .content {\n    padding: 5px 50px;\n    margin: 125px 0 50px 0;\n    @media (max-width: ${(props) => props.theme.breakpoint.sm}) {\n      padding: 5px 25px;\n    }\n  }\n  .products--grid {\n    display: grid;\n    gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: calc(100vh - 130px);\n    img {\n      width: 100px;\n    }\n  }\n`\n\nexport class CartPage extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeCurrencyLabel: 'AUD',\n      techProducts: [],\n      isLoading: true,\n      isMenuOpen: false,\n      category: 'tech',\n    }\n  }\n  onCurrencyMenuClick = (e) => {\n    this.setState({ activeCurrencyLabel: e.currentTarget.textContent.split(' ')[1] })\n  }\n\n  componentDidMount = () => {\n    this.props.client\n      .query({\n        query: gql`\n          {\n            category(input: { title: \"${this.state.category}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n                brand\n              }\n            }\n          }\n        `,\n      })\n      .then((response) => {\n        this.setState({ techProducts: response.data.category.products, isLoading: false })\n      })\n  }\n\n\n  render() {\n    const {\n      onCurrencyMenuClick,\n      props: { client },\n      state: { activeCurrencyLabel,isLoading,  techProducts },\n    } = this\n    const cartedProducts = techProducts.slice(0, 3)\n\n    return (\n      <Wrapper>\n        <NavBar\n          client={client}\n          activeCurrencyLabel={activeCurrencyLabel}\n          onCurrencyMenuClick={onCurrencyMenuClick}\n        />\n         {isLoading ? (\n              <p>Loading...</p>\n            ) : (\n              <div>\n                {cartedProducts.map((product) => {\n                  return (\n                    <CartedProduct\n                      key={product.id}\n                      product={product}\n                      activeCurrencyLabel={activeCurrencyLabel}\n                    />\n                  )\n                })}\n              </div>\n            )}\n      </Wrapper>\n    )\n  }\n}\n\nexport default CartPage\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA,yBAA0BC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAZ,CAAuBC,EAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;KAAML,O;AAyBN,OAAO,MAAMM,QAAN,SAAuBX,aAAvB,CAAqC;EAC1CY,WAAW,CAACL,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAUnBM,mBAVmB,GAUIC,CAAD,IAAO;MAC3B,KAAKC,QAAL,CAAc;QAAEC,mBAAmB,EAAEF,CAAC,CAACG,aAAF,CAAgBC,WAAhB,CAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC;MAAvB,CAAd;IACD,CAZkB;;IAAA,KAcnBC,iBAdmB,GAcC,MAAM;MACxB,KAAKb,KAAL,CAAWc,MAAX,CACGC,KADH,CACS;QACLA,KAAK,EAAEnB,GAAI;AACnB;AACA,wCAAwC,KAAKoB,KAAL,CAAWC,QAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAjCa,CADT,EAoCGC,IApCH,CAoCSC,QAAD,IAAc;QAClB,KAAKX,QAAL,CAAc;UAAEY,YAAY,EAAED,QAAQ,CAACE,IAAT,CAAcJ,QAAd,CAAuBK,QAAvC;UAAiDC,SAAS,EAAE;QAA5D,CAAd;MACD,CAtCH;IAuCD,CAtDkB;;IAEjB,KAAKP,KAAL,GAAa;MACXP,mBAAmB,EAAE,KADV;MAEXW,YAAY,EAAE,EAFH;MAGXG,SAAS,EAAE,IAHA;MAIXC,UAAU,EAAE,KAJD;MAKXP,QAAQ,EAAE;IALC,CAAb;EAOD;;EAgDDQ,MAAM,GAAG;IACP,MAAM;MACJnB,mBADI;MAEJN,KAAK,EAAE;QAAEc;MAAF,CAFH;MAGJE,KAAK,EAAE;QAAEP,mBAAF;QAAsBc,SAAtB;QAAkCH;MAAlC;IAHH,IAIF,IAJJ;IAKA,MAAMM,cAAc,GAAGN,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAvB;IAEA,oBACE,QAAC,OAAD;MAAA,wBACE,QAAC,MAAD;QACE,MAAM,EAAEb,MADV;QAEE,mBAAmB,EAAEL,mBAFvB;QAGE,mBAAmB,EAAEH;MAHvB;QAAA;QAAA;QAAA;MAAA,QADF,EAMIiB,SAAS,gBACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADK,gBAGL;QAAA,UACGG,cAAc,CAACE,GAAf,CAAoBC,OAAD,IAAa;UAC/B,oBACE,QAAC,aAAD;YAEE,OAAO,EAAEA,OAFX;YAGE,mBAAmB,EAAEpB;UAHvB,GACOoB,OAAO,CAACC,EADf;YAAA;YAAA;YAAA;UAAA,QADF;QAOD,CARA;MADH;QAAA;QAAA;QAAA;MAAA,QATR;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAwBD;;AA1FyC;AA6F5C,eAAe1B,QAAf"},"metadata":{},"sourceType":"module"}