{"ast":null,"code":"// import React, { Component } from 'react'\n// import styled from 'styled-components'\n// import cart from 'src/assets/images/cart.svg'\n// import { gql } from '@apollo/client'\n// import { CartedProduct } from 'src/components/CartedProduct'\n// import PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n// const Wrapper = styled.div`\n//   .navbar__cart {\n//     position: relative;\n//     img {\n//       width: 27px;\n//       height: 20px;\n//     }\n//     .navbar__cart--items {\n//       background-color: ${(props) => props.theme.colors.dark};\n//       color: ${(props) => props.theme.colors.white};\n//       border-radius: 50%;\n//       width: 18px;\n//       justify-content: center;\n//       font-weight: 500;\n//       align-items: flex-start;\n//       height: 18px;\n//       display: flex;\n//       font-size: 12px;\n//       position: absolute;\n//       right: -8px;\n//       top: -7px;\n//     }\n//   }\n//   .menu {\n//     position: absolute;\n//     padding: 32px 16px;\n//     min-width: 325px;\n//     height: auto;\n//     background-color: ${(props) => props.theme.colors.white};\n//     visibility: hidden;\n//     opacity: 0;\n//     transition: visibility 0s, opacity 0.5s linear;\n//     box-shadow: rgb(0 0 0 / 10%) 0px 10px 24px;\n//     &.isShowing {\n//       opacity: 1;\n//       visibility: visible;\n//       right: 22px;\n//       top: 80px;\n//     }\n//     .menu-content {\n//       max-height: 400px;\n//       overflow-y: scroll;\n//       .heading {\n//         margin-bottom: 32px;\n//         .bold {\n//           font-weight: bold;\n//         }\n//       }\n//     }\n//     .total {\n//       margin: 32px 0;\n//       display: flex;\n//       justify-content: space-between;\n//       p {\n//         font-weight: 600;\n//       }\n//     }\n//     .menu-btns {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr;\n//       gap: 10px;\n//       button {\n//         height: 43px;\n//         padding: 13px;\n//         outline: none;\n//         cursor: pointer;\n//         width: 100%;\n//       }\n//       .view-bag {\n//         background-color: ${(props) => props.theme.colors.white};\n//         color: ${(props) => props.theme.colors.text_01};\n//         border: 1px solid ${(props) => props.theme.colors.text_01};\n//         &:hover {\n//           background-color: ${(props) => props.theme.colors.text_01};\n//           color: ${(props) => props.theme.colors.white};\n//           transition: 0.3s;\n//         }\n//       }\n//       .checkout {\n//         background-color: ${(props) => props.theme.colors.primary_color};\n//         color: ${(props) => props.theme.colors.white};\n//         border: 1px solid ${(props) => props.theme.colors.primary_color};\n//         &:hover {\n//           background-color: ${(props) => props.theme.colors.white};\n//           color: ${(props) => props.theme.colors.primary_color};\n//           transition: 0.3s;\n//         }\n//       }\n//     }\n//   }\n//   .overlay {\n//     background-color: ${(props) => props.theme.colors.bg_overlay_02};\n//     visibility: hidden;\n//     opacity: 0;\n//     transition: visibility 0s, opacity 0.5s linear;\n//     width: 100%;\n//     height: 100vh;\n//     top: 80px;\n//     left: 0;\n//     position: absolute;\n//     &.isShowing {\n//       opacity: 1;\n//       visibility: visible;\n//     }\n//   }\n// `\n// export class Cart extends Component {\n//   static propTypes = {\n//     activeCurrencyLabel: PropTypes.string,\n//   }\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       techProducts: [],\n//       isLoading: true,\n//       isMenuOpen: false,\n//       category: 'tech',\n//     }\n//   }\n//   toggleCartMenu = () => {\n//     const currentState = this.state.isMenuOpen\n//     this.setState({ isMenuOpen: !currentState })\n//   }\n//   componentDidMount = () => {\n//     this.props.client\n//       .query({\n//         query: gql`\n//           {\n//             category(input: { title: \"${this.state.category}\"}) {\n//               name\n//               products {\n//                 id\n//                 name\n//                 inStock\n//                 gallery\n//                 description\n//                 category\n//                 attributes {\n//                   id\n//                   name\n//                   type\n//                   items {\n//                     displayValue\n//                     value\n//                     id\n//                   }\n//                 }\n//                 prices {\n//                   currency {\n//                     label\n//                     symbol\n//                   }\n//                   amount\n//                 }\n//                 brand\n//               }\n//             }\n//           }\n//         `,\n//       })\n//       .then((response) => {\n//         this.setState({ techProducts: response.data.category.products, isLoading: false })\n//       })\n//   }\n//   render() {\n//     const {\n//       toggleCartMenu,\n//       props: { activeCurrencyLabel },\n//       state: { isLoading, isMenuOpen, techProducts },\n//     } = this\n//     const cartedProducts = techProducts.slice(0, 3)\n//     return (\n//       <Wrapper>\n//         <div className={`overlay ${isMenuOpen ? 'isShowing' : null}`}></div>\n//         <div className=\"navbar__cart\" onClick={toggleCartMenu}>\n//           <img src={cart} alt=\"Brand cart\" />\n//           <p className=\"navbar__cart--items\">{cartedProducts.length}</p>\n//         </div>\n//         <div className={`menu ${isMenuOpen ? 'isShowing' : null}`}>\n//           <div className=\"menu-content\">\n//             <p className=\"heading\">\n//               <span className=\"bold\">My Bag, </span>\n//               <span className=\"light\"> {cartedProducts.length} items</span>\n//             </p>\n//             {isLoading ? (\n//               <p>Loading...</p>\n//             ) : (\n//               <div>\n//                 {cartedProducts.map((product) => {\n//                   return (\n//                     <CartedProduct\n//                       key={product.id}\n//                       product={product}\n//                       activeCurrencyLabel={activeCurrencyLabel}\n//                     />\n//                   )\n//                 })}\n//               </div>\n//             )}\n//           </div>\n//           <div className=\"total\">\n//             <p>Total</p>\n//             <p>$700.00</p>\n//           </div>\n//           <div className=\"menu-btns\">\n//             <Link to=\"/cart\">\n//               <button className=\"view-bag\">VIEW BAG</button>\n//             </Link>\n//             <button className=\"checkout\">CHECKOUT</button>\n//           </div>\n//         </div>\n//       </Wrapper>\n//     )\n//   }\n// }\n// export default Cart","map":{"version":3,"names":[],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/Cart.js"],"sourcesContent":["// import React, { Component } from 'react'\n// import styled from 'styled-components'\n// import cart from 'src/assets/images/cart.svg'\n// import { gql } from '@apollo/client'\n// import { CartedProduct } from 'src/components/CartedProduct'\n// import PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\n// const Wrapper = styled.div`\n//   .navbar__cart {\n//     position: relative;\n\n//     img {\n//       width: 27px;\n//       height: 20px;\n//     }\n\n//     .navbar__cart--items {\n//       background-color: ${(props) => props.theme.colors.dark};\n//       color: ${(props) => props.theme.colors.white};\n//       border-radius: 50%;\n//       width: 18px;\n//       justify-content: center;\n//       font-weight: 500;\n//       align-items: flex-start;\n//       height: 18px;\n//       display: flex;\n//       font-size: 12px;\n//       position: absolute;\n//       right: -8px;\n//       top: -7px;\n//     }\n//   }\n//   .menu {\n//     position: absolute;\n//     padding: 32px 16px;\n//     min-width: 325px;\n//     height: auto;\n//     background-color: ${(props) => props.theme.colors.white};\n//     visibility: hidden;\n//     opacity: 0;\n//     transition: visibility 0s, opacity 0.5s linear;\n//     box-shadow: rgb(0 0 0 / 10%) 0px 10px 24px;\n//     &.isShowing {\n//       opacity: 1;\n//       visibility: visible;\n//       right: 22px;\n//       top: 80px;\n//     }\n//     .menu-content {\n//       max-height: 400px;\n\n//       overflow-y: scroll;\n\n//       .heading {\n//         margin-bottom: 32px;\n//         .bold {\n//           font-weight: bold;\n//         }\n//       }\n//     }\n//     .total {\n//       margin: 32px 0;\n//       display: flex;\n//       justify-content: space-between;\n//       p {\n//         font-weight: 600;\n//       }\n//     }\n//     .menu-btns {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr;\n//       gap: 10px;\n//       button {\n//         height: 43px;\n//         padding: 13px;\n//         outline: none;\n//         cursor: pointer;\n//         width: 100%;\n//       }\n//       .view-bag {\n//         background-color: ${(props) => props.theme.colors.white};\n//         color: ${(props) => props.theme.colors.text_01};\n//         border: 1px solid ${(props) => props.theme.colors.text_01};\n//         &:hover {\n//           background-color: ${(props) => props.theme.colors.text_01};\n//           color: ${(props) => props.theme.colors.white};\n//           transition: 0.3s;\n//         }\n//       }\n//       .checkout {\n//         background-color: ${(props) => props.theme.colors.primary_color};\n//         color: ${(props) => props.theme.colors.white};\n//         border: 1px solid ${(props) => props.theme.colors.primary_color};\n//         &:hover {\n//           background-color: ${(props) => props.theme.colors.white};\n//           color: ${(props) => props.theme.colors.primary_color};\n//           transition: 0.3s;\n//         }\n//       }\n//     }\n//   }\n//   .overlay {\n//     background-color: ${(props) => props.theme.colors.bg_overlay_02};\n//     visibility: hidden;\n//     opacity: 0;\n//     transition: visibility 0s, opacity 0.5s linear;\n//     width: 100%;\n\n//     height: 100vh;\n//     top: 80px;\n//     left: 0;\n//     position: absolute;\n//     &.isShowing {\n//       opacity: 1;\n//       visibility: visible;\n//     }\n//   }\n// `\n// export class Cart extends Component {\n//   static propTypes = {\n//     activeCurrencyLabel: PropTypes.string,\n//   }\n\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       techProducts: [],\n//       isLoading: true,\n//       isMenuOpen: false,\n//       category: 'tech',\n//     }\n//   }\n\n//   toggleCartMenu = () => {\n//     const currentState = this.state.isMenuOpen\n//     this.setState({ isMenuOpen: !currentState })\n//   }\n\n//   componentDidMount = () => {\n//     this.props.client\n//       .query({\n//         query: gql`\n//           {\n//             category(input: { title: \"${this.state.category}\"}) {\n//               name\n//               products {\n//                 id\n//                 name\n//                 inStock\n//                 gallery\n//                 description\n//                 category\n//                 attributes {\n//                   id\n//                   name\n//                   type\n//                   items {\n//                     displayValue\n//                     value\n//                     id\n//                   }\n//                 }\n//                 prices {\n//                   currency {\n//                     label\n//                     symbol\n//                   }\n//                   amount\n//                 }\n//                 brand\n//               }\n//             }\n//           }\n//         `,\n//       })\n//       .then((response) => {\n//         this.setState({ techProducts: response.data.category.products, isLoading: false })\n//       })\n//   }\n\n//   render() {\n//     const {\n//       toggleCartMenu,\n//       props: { activeCurrencyLabel },\n\n//       state: { isLoading, isMenuOpen, techProducts },\n//     } = this\n//     const cartedProducts = techProducts.slice(0, 3)\n\n//     return (\n//       <Wrapper>\n//         <div className={`overlay ${isMenuOpen ? 'isShowing' : null}`}></div>\n//         <div className=\"navbar__cart\" onClick={toggleCartMenu}>\n//           <img src={cart} alt=\"Brand cart\" />\n//           <p className=\"navbar__cart--items\">{cartedProducts.length}</p>\n//         </div>\n\n//         <div className={`menu ${isMenuOpen ? 'isShowing' : null}`}>\n//           <div className=\"menu-content\">\n//             <p className=\"heading\">\n//               <span className=\"bold\">My Bag, </span>\n//               <span className=\"light\"> {cartedProducts.length} items</span>\n//             </p>\n//             {isLoading ? (\n//               <p>Loading...</p>\n//             ) : (\n//               <div>\n//                 {cartedProducts.map((product) => {\n//                   return (\n//                     <CartedProduct\n//                       key={product.id}\n//                       product={product}\n//                       activeCurrencyLabel={activeCurrencyLabel}\n//                     />\n//                   )\n//                 })}\n//               </div>\n//             )}\n//           </div>\n//           <div className=\"total\">\n//             <p>Total</p>\n//             <p>$700.00</p>\n//           </div>\n//           <div className=\"menu-btns\">\n//             <Link to=\"/cart\">\n//               <button className=\"view-bag\">VIEW BAG</button>\n//             </Link>\n//             <button className=\"checkout\">CHECKOUT</button>\n//           </div>\n//         </div>\n//       </Wrapper>\n//     )\n//   }\n// }\n\n// export default Cart\n"],"mappings},"metadata":{},"sourceType":"module"}