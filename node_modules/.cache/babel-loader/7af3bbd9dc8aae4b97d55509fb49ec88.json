{"ast":null,"code":"var _jsxFileName = \"/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/ClothesProducts.js\";\nimport React, { Component } from 'react';\nimport { gql } from '@apollo/client';\nimport { ProductCard } from 'src/components/ProductCard';\nimport PropTypes from 'prop-types';\nimport loading from 'src/assets/images/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ClothesProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.props.client.query({\n        query: gql`\n          {\n            category(input: { title: \"${title}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n\n                brand\n              }\n            }\n          }\n        `,\n        variables: {\n          title: 'clothes'\n        }\n      }).then(response => {\n        this.setState({\n          clothesProducts: response.data.category.products,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      clothesProducts: [],\n      isLoading: true,\n      category: 'clothes'\n    };\n  }\n\n  render() {\n    const {\n      props: {\n        activeCurrencyLabel\n      },\n      state: {\n        isLoading,\n        clothesProducts\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products--grid\",\n        children: clothesProducts.map(product => {\n          return /*#__PURE__*/_jsxDEV(ProductCard, {\n            product: product,\n            activeCurrencyLabel: activeCurrencyLabel\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\nClothesProducts.propTypes = {\n  product: PropTypes.object.isRequired,\n  activeCurrencyLabel: PropTypes.string\n};\nexport default ClothesProducts;","map":{"version":3,"names":["React","Component","gql","ProductCard","PropTypes","loading","ClothesProducts","constructor","props","componentDidMount","client","query","title","variables","then","response","setState","clothesProducts","data","category","products","isLoading","state","render","activeCurrencyLabel","map","product","id","propTypes","object","isRequired","string"],"sources":["/Users/uxxxr/Desktop/projects/me/scandiweb/junior-react-interface/src/components/ClothesProducts.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { gql } from '@apollo/client'\nimport { ProductCard } from 'src/components/ProductCard'\nimport PropTypes from 'prop-types'\nimport loading from 'src/assets/images/loading.gif'\n\nexport class ClothesProducts extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    activeCurrencyLabel: PropTypes.string,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      clothesProducts: [],\n      isLoading: true,\n      category: 'clothes',\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.client\n      .query({\n        query: gql`\n          {\n            category(input: { title: \"${title}\"}) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n\n                brand\n              }\n            }\n          }\n        `,\n        variables: { title: 'clothes' },\n      })\n      .then((response) => {\n        this.setState({ clothesProducts: response.data.category.products, isLoading: false })\n      })\n  }\n\n  render() {\n    const {\n      props: { activeCurrencyLabel },\n\n      state: { isLoading, clothesProducts },\n    } = this\n\n    return (\n      <>\n        {isLoading ? (\n          <div className=\"loading\">\n            <img src={loading} alt=\"loading...\" />\n          </div>\n        ) : (\n          <div className=\"products--grid\">\n            {clothesProducts.map((product) => {\n              return (\n                <ProductCard\n                  key={product.id}\n                  product={product}\n                  activeCurrencyLabel={activeCurrencyLabel}\n                />\n              )\n            })}\n          </div>\n        )}\n      </>\n    )\n  }\n}\n\nexport default ClothesProducts\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,OAAO,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;EAM7CM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KASnBC,iBATmB,GASC,MAAM;MACxB,KAAKD,KAAL,CAAWE,MAAX,CACGC,KADH,CACS;QACLA,KAAK,EAAET,GAAI;AACnB;AACA,wCAAwCU,KAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAlCa;QAmCLC,SAAS,EAAE;UAAED,KAAK,EAAE;QAAT;MAnCN,CADT,EAsCGE,IAtCH,CAsCSC,QAAD,IAAc;QAClB,KAAKC,QAAL,CAAc;UAAEC,eAAe,EAAEF,QAAQ,CAACG,IAAT,CAAcC,QAAd,CAAuBC,QAA1C;UAAoDC,SAAS,EAAE;QAA/D,CAAd;MACD,CAxCH;IAyCD,CAnDkB;;IAEjB,KAAKC,KAAL,GAAa;MACXL,eAAe,EAAE,EADN;MAEXI,SAAS,EAAE,IAFA;MAGXF,QAAQ,EAAE;IAHC,CAAb;EAKD;;EA8CDI,MAAM,GAAG;IACP,MAAM;MACJf,KAAK,EAAE;QAAEgB;MAAF,CADH;MAGJF,KAAK,EAAE;QAAED,SAAF;QAAaJ;MAAb;IAHH,IAIF,IAJJ;IAMA,oBACE;MAAA,UACGI,SAAS,gBACR;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UAAK,GAAG,EAAEhB,OAAV;UAAmB,GAAG,EAAC;QAAvB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADQ,gBAKR;QAAK,SAAS,EAAC,gBAAf;QAAA,UACGY,eAAe,CAACQ,GAAhB,CAAqBC,OAAD,IAAa;UAChC,oBACE,QAAC,WAAD;YAEE,OAAO,EAAEA,OAFX;YAGE,mBAAmB,EAAEF;UAHvB,GACOE,OAAO,CAACC,EADf;YAAA;YAAA;YAAA;UAAA,QADF;QAOD,CARA;MADH;QAAA;QAAA;QAAA;MAAA;IANJ,iBADF;EAqBD;;AAvF4C;AAAlCrB,e,CACJsB,S,GAAY;EACjBF,OAAO,EAAEtB,SAAS,CAACyB,MAAV,CAAiBC,UADT;EAEjBN,mBAAmB,EAAEpB,SAAS,CAAC2B;AAFd,C;AAyFrB,eAAezB,eAAf"},"metadata":{},"sourceType":"module"}